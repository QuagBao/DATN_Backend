version: "3.8"

services:
  #################################################
  # 1) MySQL service
  #################################################
  bk_hope_mysql:
    image: mysql:8.0
    container_name: bk_hope_mysql
    restart: always
    env_file:
      - .env
    environment:
      # Sử dụng biến từ .env:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:     ${MYSQL_DATABASE}
      MYSQL_USER:         ${MYSQL_USER}
      MYSQL_PASSWORD:     ${MYSQL_PASSWORD}
      
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - bk_hope_mysql_data:/var/lib/mysql
    networks:
      - backend-network 

  #################################################
  # 2) Redis service
  #################################################
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    env_file:
      - .env
    # Nếu bạn muốn bảo vệ Redis bằng mật khẩu, uncomment 2 dòng dưới
    # command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend-network 

  #################################################
  # 3) Backend (Python / FastAPI / Uvicorn)
  #################################################
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend-app
    restart: unless-stopped
    depends_on:
      - bk_hope_mysql
      - redis
    env_file:
      - .env
    environment:
      # Xây dựng DATABASE_URL cho SQLAlchemy / ORM:
      DATABASE_URL: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:3306/${MYSQL_DATABASE}"
      # Redis - nếu bạn bật requirepass, thêm biến sau:
      # REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: "redis://${REDIS_HOST}:${REDIS_PORT}/0"
      # SECRET_KEY, EMAIL_SENDER, EMAIL_PASSWORD, v.v. sẽ được load tự động từ .env
    ports:
      - "8000:8000"
    command: ["python", "run.py"]
    networks:
      - backend-network 

volumes:
  bk_hope_mysql_data:
  redis-data:

networks:
  backend-network:
    external: true
